package com.goat.jdk.learn.chapter005.F011;


import org.junit.Test;

/**
 * Created by 64274 on 2019/8/27.
 *
 * @ Description: 类继承的特点
 * 子类扩展了父类，将可以获得父类的全部成员变量和方法
 * 子类不能获得父类的构造函数
 * @ author  山羊来了
 * @ date 2019/8/27---15:01
 *
 *
 * 一个对象可以理解为一个房子，而一个类只是规定了什么地方要放什么东西，比如客厅要放沙发，餐厅要有餐桌
 * 创建一个新对象，就是建造一栋新房子，如果你不去初始化对象，那么这个房子就是空的，没有任何装饰家具，
 * 你也不能用它来做任何有意义的事(当然这只是个比喻，空房子不能说没有用)
 * 当调用构造函数时，才会真正让这个对象有意义，那就是布置这个房子，布置这个房子有很多设计师，
 * 子类和父类就是两个设计师，他们之间的关系可以理解为父类设计师是子类设计师的指导，首先子类会让父类先来，
 * 父类说他要A B C D E等等，于是就叫人搬来这些东西放在房子里，父类布置好了，子类就来布置了，
 * 子类就会继续在房子里添置家具等等，有时候父类和子类会有冲突，
 * 比如父类说瓷砖地板好，子类说木地板好，这时候以子类为准，因为最终这个房子是给子类的，父类只是一个顾问指导而已，这就相当于方法重写。
 * 所以如果你说创建一个子类对象会不会同时也创建了父类对象，那答案肯定是没有
 */
public class App {

    /* 测试： 子类扩展了父类，将可以获得父类的全部成员变量和方法
    *
    * 从例子可以看出：
    *   Apple 和 Orange 两个子类的 weight 属性 是互不影响的  相互独立的
    *   只是把父类的weight属性  都放到了自己的“房子里”
    * */
    @Test
    public void test(){
        Apple apple = new Apple();
        apple.weight = 100;

        Orange orange = new Orange();
        orange.weight = 200;


        orange.info(orange.getClass().getName());
        apple.info(apple.getClass().getName());
    }
}
